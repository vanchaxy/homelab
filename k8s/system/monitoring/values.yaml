kube-prometheus-stack:
  nodeExporter:
    enabled: true
    operatingSystems:
      aix:
        enabled: false
      darwin:
        enabled: false
  alertmanager:
    enabled: false
  grafana:
    enabled: true
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      hosts:
        - &host grafana.ivanchenko.io
      tls:
        - secretName: grafana-tls
          hosts:
            - *host
    sidecar:
      datasources:
        alertmanager:
          enabled: false
    additionalDataSources:
      - name: Loki
        type: loki
        access: proxy
        url: http://monitoring-loki:3100
    envFromSecret: grafana-secret
    grafana.ini:
      server:
        root_url: https://grafana.ivanchenko.io
      auth:
        oauth_auto_login: true
        signout_redirect_url: https://id.ivanchenko.io/api/oidc/end-session
      auth.generic_oauth:
        name: pocket-id
        enabled: true
        client_id: $__env{OAUTH_CLIENT_ID}
        client_secret: $__env{OAUTH_CLIENT_SECRET}
        scopes: "openid profile email groups"
        auth_url: "https://id.ivanchenko.io/authorize/"
        token_url: "https://id.ivanchenko.io/api/oidc/token/"
        api_url: "https://id.ivanchenko.io/api/oidc/userinfo/"
        role_attribute_path: contains(groups[*], 'admins') && 'GrafanaAdmin' || 'Viewer'
        allow_assign_grafana_admin: true
    deploymentStrategy:
      type: Recreate
    persistence:
      enabled: true
      storageClassName: longhorn-ssd
      accessModes:
        - ReadWriteOnce
      size: 10Gi
  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      retention: 10d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn-ssd
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi

loki:
  deploymentMode: SingleBinary
  write:
    replicas: 0
  read:
    replicas: 0
  backend:
    replicas: 0
  singleBinary:
    replicas: 1
    persistence:
      size: 10Gi
  loki:
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    auth_enabled: "false"
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
    compactor:
      retention_enabled: true
      compaction_interval: 10m
      delete_request_store: filesystem
    query_scheduler:
      max_outstanding_requests_per_tenant: 4096
    frontend:
      max_outstanding_per_tenant: 4096
    limits_config:
      retention_period: 336h  # 2 weeks
      split_queries_by_interval: 15m
      max_query_series: 100000
      max_query_parallelism: 32
